import argparse
import asyncio

from anilibria_api_client.api_client import AsyncAnilibriaAPI
from anilibria_api_client.models import Release
from anilibria_api_client.helper import auth #, async_download

async def get_args():
    parser = argparse.ArgumentParser(description="Search anime!")

    parser.add_argument("--name", help="–ù–∞–∑–≤–∞–Ω–∏–µ –∞–Ω–∏–º–µ", required=True)
    parser.add_argument("--login", help="–õ–æ–≥–∏–Ω –æ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞", required=False)
    parser.add_argument("--password", help="–ü–∞—Ä–æ–ª—å –æ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞", required=False)
    parser.add_argument("--limit", help="–õ–∏–º–∏—Ç –≤—ã–≤–æ–¥–∏–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 1")

    return parser.parse_args()

async def get_api_client(login, password):
    if login and password:
        return await auth(AsyncAnilibriaAPI(), login=login, password=password)
    else: return AsyncAnilibriaAPI()

async def main():
    args = await get_args()
    client = await get_api_client(login=args.login, password=args.password)

    data = await client.anime.catalog_releases_get(Release(search=args.name))

    limit = args.limit or 1
    data = data.get("data")[:limit]

    print("–í–æ—Ç —á—Ç–æ —è –Ω–∞—à–µ–ª –ø–æ –∑–∞–ø—Ä–æ—Å—É {}".format(args.name))
    i = 1

    for item in data:
        detailed = await client.anime.releases_idOrAlias(idOrAlias=item['id'])
        episodes = ""
        i_ = 1
        for episode in detailed.get("episodes"):
            episodes += f"\n{i_}. {episode.get("name") or f"{i_} —ç–ø–∏–∑–æ–¥"} - {episode.get("hls_1080") or episode.get("hls_720") or episode.get("hls_480")}"
            #await async_download(url=episode.get("hls_1080") or episode.get("hls_720") or episode.get("hls_480"), filename=f"{i_}.mp4")
            i_ += 1
        description = f"""\n{i}. üåü {item['name']['main']} ({item['year']}) üåü

üì∫ –¢–∏–ø: {item['type']['description']}
üé¨ –≠–ø–∏–∑–æ–¥–æ–≤: {item['episodes_total']}
üè∑Ô∏è  –†–µ–π—Ç–∏–Ω–≥: {item['age_rating']['label']}
üìÖ –°–µ–∑–æ–Ω: {item['season']['description']} {item['year']}

‚ù§Ô∏è  –í –∏–∑–±—Ä–∞–Ω–Ω–æ–º —É {item['added_in_users_favorites']} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

–≠–ø–∏–∑–æ–¥—ã: {episodes}"""
        print(description)
        i += 1

    print(f"\n–í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ {len(data)} –∑–∞–ø–∏—Å–µ–π")
    return description

if __name__ == "__main__":
    asyncio.run(main())